@model LoomCrm_Hospital.Models.MyHospital

@{
    ViewBag.Title = "Hastane Bilgilerini Düzenle";
}


<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Sistem Ayarları</h3>
            </div>
            @using (Html.BeginForm("SaveHospital", "MyHospital", FormMethod.Post))
            {
                <div class="box-body">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(p => p.Name, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.Name, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.lunchTime, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.lunchTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lunchTime, "", new { @class = "text-danger" })
                       </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.lunchDurationMinute, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.lunchDurationMinute, new { htmlAttributes = new { @class = "form-control", @min = "0", max = "60" } })
                        @Html.ValidationMessageFor(model => model.lunchDurationMinute, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.smsUserName, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.smsUserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.smsUserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.smsHeader, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.smsHeader, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.smsHeader, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.smsPassword, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.smsPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.smsPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.smsApiPage, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(p => p.smsApiPage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.smsApiPage, "", new { @class = "text-danger" })
                        @Html.HiddenFor(p=>p.MyHospitalId)
                      </div>
                    <div class="box-footer">
                        <input type="submit" value="Güncelle" class="btn btn-block btn-success" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>